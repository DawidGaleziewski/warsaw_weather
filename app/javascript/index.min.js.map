{"version":3,"sources":["node_modules/browser-pack/_prelude.js","javascript/handlers/UIHandler.js","javascript/handlers/WeatherHandler.js","javascript/index.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","UIHandler","kelvinDegrees","celsius","toFixed","UIWeatherSumary","weatherForecastData","UIDay","querySelector","UIDate","UIWindSpeed","UIHumidity","UIWeatherIconImage","UIweatherIconCaption","UIdegree","dateObject","Date","list","dt_txt","dayOfTheWeek","toUTCString","split","yearMonthDay","concat","getFullYear","getUTCMonth","getUTCDate","windSpeed","wind","speed","humidity","main","weatherIconURL","weather","icon","weatherDescription","description","tempCelcius","this","kelvinToCelsius","temp","innerText","src","innerHTML","WeatherHandler","_classCallCheck","apiKey","url","longitude","latitude","requestURL","Promise","resolve","reject","fetch","then","response","json","data","error","_WeatherHandler","_interopRequireDefault","_UIHandler","Weather","UI","UIweatherSummary","document","getElementById","warsawGeolocation","getWeather","console","log","updateWeatherSummary"],"mappings":"CAAA,WAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,OAAAJ,GAAA,EAAA,CAAA,CAAAiB,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,qaCCMK,iFACYC,GACd,IAAMC,GAAWD,EAAgB,QAAQE,QAAQ,GACjD,OAAOD,iDAGYE,EAAiBC,GACpC,IAAMC,EAAQF,EAAgBG,cAAc,QAC5C,IAAMC,EAASJ,EAAgBG,cAAc,SAC7C,IAAME,EAAcL,EAAgBG,cAAc,eAClD,IAAMG,EAAaN,EAAgBG,cAAc,aACjD,IAAMI,EAAqBP,EAAgBG,cACzC,wBAEF,IAAMK,EAAuBR,EAAgBG,cAC3C,0BAEF,IAAMM,EAAWT,EAAgBG,cAAc,WAE/C,IAAMO,EAAa,IAAIC,KAAKV,EAAoBW,KAAK,GAAGC,QACxD,IAAMC,EAAeJ,EAAWK,cAAcC,MAAM,KAAK,GACzD,IAAMC,EAAY,GAAAC,OAAMR,EAAWS,cAAjB,KAAAD,OAAkCR,EAAWU,cAC7D,EADgB,KAAAF,OACXR,EAAWW,aAAe,GACjC,IAAMC,EAAYrB,EAAoBW,KAAK,GAAGW,KAAKC,MACnD,IAAMC,EAAWxB,EAAoBW,KAAK,GAAGc,KAAKD,SAClD,IAAME,EAAc,oCAAAT,OAAuCjB,EAAoBW,KAAK,GAAGgB,QAAQ,GAAGC,KAA9E,WACpB,IAAMC,EACJ7B,EAAoBW,KAAK,GAAGgB,QAAQ,GAAGG,YACzC,IAAMC,EAAcC,KAAKC,gBACvBjC,EAAoBW,KAAK,GAAGc,KAAKS,MAEnCjC,EAAMkC,UAAYtB,EAClBV,EAAOgC,UAAYnB,EACnBZ,EAAY+B,UAAZ,SAAAlB,OAAiCI,EAAjC,SACAhB,EAAW8B,UAAX,GAAAlB,OAA0BO,EAA1B,KACAlB,EAAmB8B,IAAMV,EACzBnB,EAAqB4B,UAAYN,EACjCrB,EAAS6B,UAAT,GAAApB,OAAwBc,EAAxB,+BAIWpC,2cC1CT2C,aACJ,SAAAA,IAAcC,EAAAP,KAAAM,GACZN,KAAKQ,OAAS,mCACdR,KAAKS,IAAM,mFAGFC,EAAWC,GACpB,IAAMC,EAAU,GAAA3B,OAAMe,KAAKS,IAAX,iBAAAxB,OAA8B0B,EAA9B,SAAA1B,OAA8CyB,EAA9C,WAAAzB,OAAiEe,KAAKQ,QACtF,OAAO,IAAIK,QAAQ,SAACC,EAASC,GAE3BC,MAAMJ,GACHK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIN,EAAQM,KAFxB,SAGS,SAAAC,GAAK,OAAIN,EAAOM,6BAKhBf,sDClBf,IAAAgB,EAAAC,EAAAvE,EAAA,8BACA,IAAAwE,EAAAD,EAAAvE,EAAA,4EAEA,IAAMyE,EAAU,IAAIH,EAAA,WACpB,IAAMI,EAAK,IAAIF,EAAA,WACf,IAAMG,EAAmBC,SAASC,eAAe,mBAEjD,IAAMC,EAAoB,CACxBpB,UAAW,UACXC,SAAU,WAEZc,EAAQM,WACND,EAAkBpB,UAClBoB,EAAkBnB,UAClBM,KAAK,SAAAG,GACLY,QAAQC,IAAIb,GACZM,EAAGQ,qBAAqBP,EAAkBP","file":"index.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* eslint-disable class-methods-use-this */\nclass UIHandler {\n  kelvinToCelsius(kelvinDegrees) {\n    const celsius = (kelvinDegrees - 273.15).toFixed(1);\n    return celsius;\n  }\n\n  updateWeatherSummary(UIWeatherSumary, weatherForecastData) {\n    const UIDay = UIWeatherSumary.querySelector('.day');\n    const UIDate = UIWeatherSumary.querySelector('.date');\n    const UIWindSpeed = UIWeatherSumary.querySelector('.wind-speed');\n    const UIHumidity = UIWeatherSumary.querySelector('.humidity');\n    const UIWeatherIconImage = UIWeatherSumary.querySelector(\n      '.weather-icon__image'\n    );\n    const UIweatherIconCaption = UIWeatherSumary.querySelector(\n      '.weather-icon__caption'\n    );\n    const UIdegree = UIWeatherSumary.querySelector('.degree');\n\n    const dateObject = new Date(weatherForecastData.list[0].dt_txt);\n    const dayOfTheWeek = dateObject.toUTCString().split(',')[0];\n    const yearMonthDay = `${dateObject.getFullYear()}/${dateObject.getUTCMonth() +\n      1}/${dateObject.getUTCDate() + 1}`;\n    const windSpeed = weatherForecastData.list[0].wind.speed;\n    const humidity = weatherForecastData.list[0].main.humidity;\n    const weatherIconURL = `http://openweathermap.org/img/wn/${weatherForecastData.list[0].weather[0].icon}@2x.png`;\n    const weatherDescription =\n      weatherForecastData.list[0].weather[0].description;\n    const tempCelcius = this.kelvinToCelsius(\n      weatherForecastData.list[0].main.temp\n    );\n    UIDay.innerText = dayOfTheWeek;\n    UIDate.innerText = yearMonthDay;\n    UIWindSpeed.innerText = `Wind: ${windSpeed} km/h`;\n    UIHumidity.innerText = `${humidity}%`;\n    UIWeatherIconImage.src = weatherIconURL;\n    UIweatherIconCaption.innerText = weatherDescription;\n    UIdegree.innerHTML = `${tempCelcius} &deg`;\n  }\n}\n\nexport default UIHandler;\n","class WeatherHandler {\n  constructor() {\n    this.apiKey = 'e7336c281c3b4f9e7da03a467444db14';\n    this.url = 'https://api.openweathermap.org/data/2.5/';\n  }\n\n  getWeather(longitude, latitude) {\n    const requestURL = `${this.url}forecast?lat=${latitude}&lon=${longitude}&APPID=${this.apiKey}`;\n    return new Promise((resolve, reject) => {\n      // eslint-disable-next-line no-undef\n      fetch(requestURL)\n        .then(response => response.json())\n        .then(data => resolve(data))\n        .catch(error => reject(error));\n    });\n  }\n}\n\nexport default WeatherHandler;\n","import WeatherHandler from './handlers/WeatherHandler';\nimport UIHandler from './handlers/UIHandler';\n\nconst Weather = new WeatherHandler();\nconst UI = new UIHandler();\nconst UIweatherSummary = document.getElementById('weather-summary');\n\nconst warsawGeolocation = {\n  longitude: '21.0122',\n  latitude: '52.2297'\n};\nWeather.getWeather(\n  warsawGeolocation.longitude,\n  warsawGeolocation.latitude\n).then(data => {\n  console.log(data);\n  UI.updateWeatherSummary(UIweatherSummary, data);\n});\n"]}